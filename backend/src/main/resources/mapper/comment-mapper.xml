<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codebase.backend.comment.mapper.CommentMapper">


    <insert id="insertComment" parameterType="com.codebase.backend.comment.dto.CommentDto" keyProperty="id" useGeneratedKeys="true">


    <insert id="insertComment" parameterType="com.codebase.backend.comment.dto.CommentDto">

        INSERT INTO comments (post_id, content, author, created_at)
        VALUES (#{postId}, #{content}, #{author}, CURRENT_TIMESTAMP)
    </insert>

    <select id="findAllComments" resultType="com.codebase.backend.comment.dto.CommentDto">
        SELECT id, post_id AS postId, content, author, created_at AS createdAt
        FROM comments
        ORDER BY created_at DESC
    </select>

    <select id="findCommentsByPostId" parameterType="long" resultType="com.codebase.backend.comment.dto.CommentDto">
        SELECT id, post_id AS postId, content, author, created_at AS createdAt
        FROM comments
        WHERE post_id = #{postId}
        ORDER BY created_at DESC
    </select>

    <update id="updateComment" parameterType="com.codebase.backend.comment.dto.CommentDto">
        UPDATE comments
        SET content = #{content}
        WHERE id = #{id}
    </update>

    <select id="findCommentById" parameterType="long" resultType="com.codebase.backend.comment.dto.CommentDto">
        SELECT id, post_id AS postId, content, author, created_at AS createdAt
        FROM comments
        WHERE id = #{id}
    </select>

    <delete id="deleteComment" parameterType="long">
        DELETE FROM comments
        WHERE id = #{id}
    </delete>

</mapper>